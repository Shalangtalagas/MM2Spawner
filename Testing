local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Initialize required services and modules
local boxmodule = require(game:GetService("ReplicatedStorage").Modules.BoxModule)
local itemdatabase = require(game:GetService("ReplicatedStorage").Database.Sync.Item)

-- Get the inventory script environment
local hi = getsenv(game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Inventory.NewItem)._G

getgenv().newValue = ""

-- Function to get a random box
local function getrandombox()
    local boxes = require(game:GetService("ReplicatedStorage").Database.Sync.MysteryBox)
    local keys = {}
    for k in pairs(boxes) do
        table.insert(keys, k)
    end
    return keys[math.random(1, #keys)]
end

-- Function to properly add item to inventory and make it equippable
local function opencrate(ITEM_NAME)
    -- First add to profile data
    local profileModule = require(game:GetService("ReplicatedStorage").Modules.ProfileData)
    if not profileModule.Weapons.Owned[ITEM_NAME] then
        profileModule.Weapons.Owned[ITEM_NAME] = 1
    else
        profileModule.Weapons.Owned[ITEM_NAME] += 1
    end
    
    -- Then call the box opening function
    boxmodule.OpenBox(getrandombox(), ITEM_NAME)
    
    -- Finally update the inventory UI
    hi.NewItem(ITEM_NAME, nil, nil, 'Weapons', 1)
    
    -- Force inventory update
    game:GetService("ReplicatedStorage").RemoteEvents.InventoryUpdate:FireServer(profileModule.Weapons)
end

-- Function to convert display name to raw item name
local function getrawnamebyrealname(realname)
    for i in pairs(itemdatabase) do
        if realname:lower() == i:lower() then
            return i
        end
    end
    return realname -- Return original if not found
end

-- Function to get item image
local function getImage(iname)
    for name, info in pairs(itemdatabase) do
        if iname:lower() == name:lower() then
            return info.Image
        end
    end
end

-- Function to create fake item in inventory UI
local function fakeItem()
    local jj = Instance.new("Frame")
    jj.Name = "NewItem"
    local gui = game:GetService("Players").LocalPlayer.PlayerGui.MainGUI
    
    -- Find the correct inventory container
    local container
    if gui:FindFirstChild("Game") and gui.Game:FindFirstChild("Inventory") then
        container = gui.Game.Inventory.Main.Weapons.Items.Container.Classic.Container
    elseif gui:FindFirstChild("Lobby") and gui.Lobby.Screens:FindFirstChild("Inventory") then
        container = gui.Lobby.Screens.Inventory.Main.Weapons.Items.Container.Classic.Container
    else
        warn("Could not find inventory container")
        return
    end
    
    jj.Parent = container
    jj.Size = UDim2.new(0.2, 0, 0.25, 0)
    jj.BackgroundTransparency = 1

    -- Create item container
    local kk = Instance.new("Frame", jj)
    kk.Name = "Container"
    kk.Position = UDim2.new(0, 3, 0, 3)
    kk.Size = UDim2.new(1, -6, 0.825, -6)
    kk.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
    kk.BorderSizePixel = 2

    -- Item icon
    local ll = Instance.new("ImageLabel", kk)
    ll.Name = "Icon"
    ll.Size = UDim2.new(1, 0, 1, 0)
    ll.Position = UDim2.new(0.5, 0, 0.5, 0)
    ll.AnchorPoint = Vector2.new(0.5, 0.5)
    ll.Image = getImage(getgenv().newValue)
    ll.BackgroundTransparency = 1

    -- Item amount (hidden)
    local hh = Instance.new("TextLabel", kk)
    hh.Name = "Amount"
    hh.Size = UDim2.new(0.5, 0, 0.225, 0)
    hh.Position = UDim2.new(1, -4, 0, 3)
    hh.AnchorPoint = Vector2.new(1, 0)
    hh.BackgroundTransparency = 1
    hh.TextColor3 = Color3.new(1, 1, 1)
    hh.TextScaled = true
    hh.Text = ""

    -- Item name frame
    local gg = Instance.new("Frame", jj)
    gg.Name = "ItemName"
    gg.Position = UDim2.new(0, 3, 0.8, 3)
    gg.Size = UDim2.new(1, -6, 0.2, -4)
    gg.BorderSizePixel = 2

    -- Set rarity color
    for name, info in pairs(itemdatabase) do
        if getgenv().newValue:lower() == name:lower() then
            if info.Rarity == "Godly" then
                gg.BackgroundColor3 = Color3.fromRGB(255, 0, 179)
            elseif info.Rarity == "Ancient" then
                gg.BackgroundColor3 = Color3.fromRGB(100, 10, 255)
            end
        end
    end

    -- Name label background
    local bg = Instance.new("ImageLabel", gg)
    bg.Size = UDim2.new(1, 0, 1, 0)
    bg.Image = "rbxassetid://2957790421"
    bg.BackgroundTransparency = 1

    -- Item name text
    local lb = Instance.new("TextLabel", gg)
    lb.Name = "Label"
    lb.Position = UDim2.new(0.5, 0, 0.5, 0)
    lb.AnchorPoint = Vector2.new(0.5, 0.5)
    lb.Size = UDim2.new(0.9, 0, 0.9, 0)
    lb.BackgroundTransparency = 1
    lb.TextColor3 = Color3.new(1, 1, 1)
    lb.TextStrokeTransparency = 0.7
    lb.Font = Enum.Font.SourceSansBold
    lb.Text = getgenv().newValue
    lb.TextScaled = true
end

-- Create the main window
local Window = Rayfield:CreateWindow({
    Name = "Item Spawner",
    LoadingTitle = "Loading Item Spawner",
    LoadingSubtitle = "by Heavenbatumbading",
    ConfigurationSaving = {
        Enabled = false
    },
    Discord = {
        Enabled = false
    },
    KeySystem = false
})

-- Create the main tab
local Tab = Window:CreateTab("Spawner", 4483362458)
Tab:CreateSection("Item Spawning")

-- Item input field
Tab:CreateInput({
    Name = "Item Name",
    PlaceholderText = "Enter item name",
    RemoveTextAfterFocusLost = false,
    Callback = function(Value)
        getgenv().newValue = getrawnamebyrealname(Value)
    end,
})

-- Spawn button
Tab:CreateButton({
    Name = "Spawn Item",
    Callback = function()
        if not getgenv().newValue or getgenv().newValue == "" then
            Rayfield:Notify({
                Title = "Error",
                Content = "Please enter an item name first",
                Duration = 3,
            })
            return
        end

        -- Spawn the item
        opencrate(getgenv().newValue)
        
        -- Create the visual representation
        fakeItem()
        
        -- Notify success
        Rayfield:Notify({
            Title = "Success",
            Content = "Spawned " .. getgenv().newValue .. "\nCheck your inventory!",
            Duration = 3,
        })
    end,
})

-- Load the UI
Rayfield:LoadConfiguration()
