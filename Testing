local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local boxmodule = require(game:GetService("ReplicatedStorage").Modules.BoxModule)
local itemdatabase = require(game:GetService("ReplicatedStorage").Database.Sync.Item)
local PlayerData = require(game:GetService("ReplicatedStorage").Modules.ProfileData)

-- Create the GUI
local Window = Rayfield:CreateWindow({
   Name = "Item Spawner",
   LoadingTitle = "Loading Spawner...",
   Theme = "Dark"
})

local Tab = Window:CreateTab("Main")

-- Item spawn function
local function spawnItem(itemName)
    -- Find the exact item name from database
    local rawName
    for name, _ in pairs(itemdatabase) do
        if name:lower() == itemName:lower() then
            rawName = name
            break
        end
    end
    
    if not rawName then
        Rayfield:Notify({
            Title = "Error",
            Content = "Item not found in database",
            Duration = 3
        })
        return false
    end
    
    -- Add to inventory
    if not PlayerData.Weapons.Owned[rawName] then
        PlayerData.Weapons.Owned[rawName] = 1
    else
        PlayerData.Weapons.Owned[rawName] += 1
    end
    
    -- Force inventory update
    game:GetService("RunService"):BindToRenderStep("InventoryUpdate", 0, function()
        PlayerData.Weapons = PlayerData.Weapons
    end)
    
    -- Create visual item in inventory
    local gui = game.Players.LocalPlayer.PlayerGui.MainGUI
    local container
    
    if gui:FindFirstChild("Game") and gui.Game:FindFirstChild("Inventory") then
        container = gui.Game.Inventory.Main.Weapons.Items.Container.Classic.Container
    elseif gui:FindFirstChild("Lobby") and gui.Lobby.Screens:FindFirstChild("Inventory") then
        container = gui.Lobby.Screens.Inventory.Main.Weapons.Items.Container.Classic.Container
    end
    
    if container then
        local itemFrame = Instance.new("Frame")
        itemFrame.Name = "NewItem"
        itemFrame.Parent = container
        itemFrame.Size = UDim2.new(0.2, 0, 0.25, 0)
        itemFrame.BackgroundTransparency = 1

        -- Item container
        local itemContainer = Instance.new("Frame", itemFrame)
        itemContainer.Name = "Container"
        itemContainer.Position = UDim2.new(0, 3, 0, 3)
        itemContainer.Size = UDim2.new(1, -6, 0.825, -6)
        itemContainer.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
        itemContainer.BorderSizePixel = 2

        -- Item icon
        local icon = Instance.new("ImageLabel", itemContainer)
        icon.Name = "Icon"
        icon.Size = UDim2.new(1, 0, 1, 0)
        icon.Position = UDim2.new(0.5, 0, 0.5, 0)
        icon.AnchorPoint = Vector2.new(0.5, 0.5)
        icon.Image = itemdatabase[rawName].Image
        icon.BackgroundTransparency = 1

        -- Item amount
        local amount = Instance.new("TextLabel", itemContainer)
        amount.Name = "Amount"
        amount.Size = UDim2.new(0.5, 0, 0.225, 0)
        amount.Position = UDim2.new(1, -4, 0, 3)
        amount.AnchorPoint = Vector2.new(1, 0)
        amount.BackgroundTransparency = 1
        amount.TextColor3 = Color3.new(1, 1, 1)
        amount.TextScaled = true
        amount.Text = "x"..PlayerData.Weapons.Owned[rawName]

        -- Item name frame
        local nameFrame = Instance.new("Frame", itemFrame)
        nameFrame.Name = "ItemName"
        nameFrame.Position = UDim2.new(0, 3, 0.8, 3)
        nameFrame.Size = UDim2.new(1, -6, 0.2, -4)
        nameFrame.BorderSizePixel = 2

        -- Set rarity color
        if itemdatabase[rawName].Rarity == "Godly" then
            nameFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 179)
        elseif itemdatabase[rawName].Rarity == "Ancient" then
            nameFrame.BackgroundColor3 = Color3.fromRGB(100, 10, 255)
        end

        -- Background for name
        local bg = Instance.new("ImageLabel", nameFrame)
        bg.Size = UDim2.new(1, 0, 1, 0)
        bg.Image = "rbxassetid://2957790421"
        bg.BackgroundTransparency = 1

        -- Item name label
        local label = Instance.new("TextLabel", nameFrame)
        label.Name = "Label"
        label.Position = UDim2.new(0.5, 0, 0.5, 0)
        label.AnchorPoint = Vector2.new(0.5, 0.5)
        label.Size = UDim2.new(0.9, 0, 0.9, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextStrokeTransparency = 0.7
        label.Font = Enum.Font.SourceSansBold
        label.Text = rawName
        label.TextScaled = true
    end
    
    -- Play crate opening animation
    boxmodule.OpenBox("BasicBox", rawName)
    
    return true
end

-- Create input for item name
Tab:CreateInput({
   Name = "Item Name",
   PlaceholderText = "Enter item name",
   Callback = function(Value)
       getgenv().currentItem = Value
   end,
})

-- Create spawn button
Tab:CreateButton({
   Name = "Spawn Item",
   Callback = function()
       if getgenv().currentItem and getgenv().currentItem ~= "" then
           local success = spawnItem(getgenv().currentItem)
           if success then
               Rayfield:Notify({
                   Title = "Success",
                   Content = "Spawned " .. getgenv().currentItem,
                   Duration = 3
               })
           end
       else
           Rayfield:Notify({
               Title = "Error",
               Content = "Please enter an item name",
               Duration = 3
           })
       end
   end,
})

-- Popular items dropdown
local popularItems = {
    "Corrupt",
    "Gingerscope",
    "Traveler's Axe",
    "Harvester",
    "Celestial",
    "Vampire's Axe",
    "Swirly Axe",
    "Traveler's Gun",
    "Evergun",
    "Turkey",
    "Evergreen",
    "Vampire's Gun",
    "Bauble",
    "Constellation",
    "Bat",
    "Luger",
    "Darkbringer",
    "Lightbringer"
}

Tab:CreateDropdown({
   Name = "Popular Items",
   Options = popularItems,
   Callback = function(Option)
       getgenv().currentItem = Option
   end,
})
