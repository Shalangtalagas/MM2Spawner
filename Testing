local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Player = Players.LocalPlayer

-- Modules
local ProfileData = require(ReplicatedStorage.Modules.ProfileData)
local ItemDatabase = require(ReplicatedStorage.Database.Sync.Item)

-- Remote Events
local InventoryUpdate = ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("InventoryUpdate")

-- Item Spawner Function
local function spawnItem(itemName)
    -- Verify item exists in database
    local validItem = false
    for name in pairs(ItemDatabase) do
        if name:lower() == itemName:lower() then
            itemName = name -- Get correct capitalization
            validItem = true
            break
        end
    end
    
    if not validItem then
        return false, "Item not found in database"
    end
    
    -- Add to inventory
    if not ProfileData.Weapons.Owned[itemName] then
        ProfileData.Weapons.Owned[itemName] = 1
    else
        ProfileData.Weapons.Owned[itemName] += 1
    end
    
    -- Force inventory update
    InventoryUpdate:FireServer(ProfileData.Weapons)
    
    -- Try to update UI
    pcall(function()
        local inventoryScript = Player.PlayerGui.MainGUI.Inventory.NewItem
        local hi = getsenv(inventoryScript)._G
        hi.NewItem(itemName, nil, nil, 'Weapons', 1)
    end)
    
    return true, "Item spawned successfully"
end

-- Create UI
local Window = Rayfield:CreateWindow({
    Name = "Item Spawner",
    LoadingTitle = "Loading Item Spawner",
    LoadingSubtitle = "by Heavenbatumbading",
    ConfigurationSaving = {Enabled = false},
    Discord = {Enabled = false},
    KeySystem = false
})

local Tab = Window:CreateTab("Main", 4483362458)
Tab:CreateSection("Item Spawning")

local itemInput = Tab:CreateInput({
    Name = "Item Name",
    PlaceholderText = "Enter exact item name",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text) end
})

Tab:CreateButton({
    Name = "Spawn Item",
    Callback = function()
        local itemName = itemInput.CurrentValue
        if itemName == "" then
            Rayfield:Notify({
                Title = "Error",
                Content = "Please enter an item name",
                Duration = 3,
            })
            return
        end
        
        local success, message = spawnItem(itemName)
        
        Rayfield:Notify({
            Title = success and "Success" or "Error",
            Content = message,
            Duration = 3,
        })
    end,
})

-- Auto-complete suggestions
local commonItems = {
    "Corrupt", "Gingerscope", "Traveler's Axe", "Harvester", "Celestial", 
    "Icepiercer", "Vampire's Axe", "Batwing", "Elderwood Scythe", "Luger",
    "Darkbringer", "Lightbringer", "Candleflame", "Chroma Luger", "Chroma Darkbringer"
}

Tab:CreateDropdown({
    Name = "Quick Select",
    Options = commonItems,
    CurrentOption = "Select Item",
    Flag = "ItemSelector",
    Callback = function(Option)
        itemInput:Set(Option)
    end,
})

Rayfield:LoadConfiguration()
