local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local boxmodule = require(game:GetService("ReplicatedStorage").Modules.BoxModule)
local hi = getsenv(game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Inventory.NewItem)._G
local itemdatabase = require(game:GetService("ReplicatedStorage").Database.Sync.Item)

getgenv().newValue = ""

-- Basic functions
function getrandombox()
    local boxes = require(game:GetService("ReplicatedStorage").Database.Sync.MysteryBox)
    local keys = {}
    for k, _ in pairs(boxes) do
        table.insert(keys, k)
    end
    return keys[math.random(1, #keys)]
end

function getrawnamebyrealname(realname)
    for i, _ in pairs(itemdatabase) do
        if realname:lower() == i:lower() then
            return i
        end
    end
    return realname
end

function getImage(iname)
    for name, info in pairs(itemdatabase) do
        if iname:lower() == name:lower() then
            return info.Image
        end
    end
end

function fakeItem()
    local jj = Instance.new("Frame")
    jj.Name = "NewItem"
    local gui = game:GetService("Players").LocalPlayer.PlayerGui.MainGUI
    if gui:FindFirstChild("Game") and gui.Game:FindFirstChild("Inventory") then
        jj.Parent = gui.Game.Inventory.Main.Weapons.Items.Container.Classic.Container
    elseif gui:FindFirstChild("Lobby") and gui.Lobby.Screens:FindFirstChild("Inventory") then
        jj.Parent = gui.Lobby.Screens.Inventory.Main.Weapons.Items.Container.Classic.Container
    end
    
    -- Rest of your fakeItem implementation...
end

-- Create the window
local Window = Rayfield:CreateWindow({
    Name = "Item Spawner",
    LoadingTitle = "Loading Item Spawner",
    LoadingSubtitle = "by Heavenbatumbading",
    ConfigurationSaving = {
        Enabled = false
    },
    KeySystem = false,
})

-- Create the main tab
local MainTab = Window:CreateTab("Main", 4483362458)

-- Input section
MainTab:CreateSection("Item Input")
local ItemInput = MainTab:CreateInput({
    Name = "Item Name",
    PlaceholderText = "Enter item name",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        getgenv().newValue = getrawnamebyrealname(Text)
    end,
})

-- Spawn button section
MainTab:CreateSection("Actions")
local SpawnButton = MainTab:CreateButton({
    Name = "Spawn Item",
    Callback = function()
        if getgenv().newValue == "" then
            Window:Notify({
                Title = "Error",
                Content = "Please enter an item name first",
                Duration = 3,
            })
            return
        end
        
        -- Show loading notification
        local notif = Window:Notify({
            Title = "Spawning Item",
            Content = "Spawning "..getgenv().newValue.."...",
            Duration = 6.5,
        })
        
        -- Spawn the item
        opencrate(getgenv().newValue)
        fakeItem()
        
        -- Reset character
        game.Players.LocalPlayer.Character:BreakJoints()
        
        -- Update notification
        notif:ChangeTitle("Success")
        notif:ChangeContent("Spawned "..getgenv().newValue)
    end,
})

-- Popular items dropdown (optional)
local popularItems = {
    "Luger",
    "Darkbringer",
    "Lightbringer",
    "Chroma Darkbringer",
    "Chroma Lightbringer",
    "Harvester",
    "Gingerscope",
    "Corrupt"
}

MainTab:CreateDropdown({
    Name = "Popular Items",
    Options = popularItems,
    CurrentOption = "",
    Callback = function(Option)
        getgenv().newValue = getrawnamebyrealname(Option)
        ItemInput:Set(Option) -- Update the input field
        Window:Notify({
            Title = "Item Selected",
            Content = "Selected: "..Option,
            Duration = 1.5,
        })
    end,
})
